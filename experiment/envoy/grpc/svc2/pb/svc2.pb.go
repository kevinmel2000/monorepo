// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/svc2/pb/svc2.proto

/*
Package svc2 is a generated protocol buffer package.

It is generated from these files:
	grpc/svc2/pb/svc2.proto

It has these top-level messages:
	PingRequest
	PingResponse
*/
package svc2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	Message string `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "svc2.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "svc2.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Svc2 service

type Svc2Client interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type svc2Client struct {
	cc *grpc.ClientConn
}

func NewSvc2Client(cc *grpc.ClientConn) Svc2Client {
	return &svc2Client{cc}
}

func (c *svc2Client) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/svc2.svc2/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Svc2 service

type Svc2Server interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

func RegisterSvc2Server(s *grpc.Server, srv Svc2Server) {
	s.RegisterService(&_Svc2_serviceDesc, srv)
}

func _Svc2_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Svc2Server).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc2.svc2/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Svc2Server).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Svc2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svc2.svc2",
	HandlerType: (*Svc2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Svc2_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/svc2/pb/svc2.proto",
}

func init() { proto.RegisterFile("grpc/svc2/pb/svc2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2f, 0x2a, 0x48,
	0xd6, 0x2f, 0x2e, 0x4b, 0x36, 0xd2, 0x2f, 0x48, 0x02, 0xd3, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9,
	0x42, 0x2c, 0x20, 0xb6, 0x92, 0x3a, 0x17, 0x77, 0x40, 0x66, 0x5e, 0x7a, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x90, 0x04, 0x17, 0xbb, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x8c, 0xab, 0xa4, 0xc1, 0xc5, 0x03, 0x51, 0x58, 0x5c, 0x90, 0x9f,
	0x57, 0x9c, 0x8a, 0x5b, 0xa5, 0x91, 0x39, 0x17, 0xd8, 0x68, 0x21, 0x7d, 0x2e, 0x16, 0x90, 0x0e,
	0x21, 0x41, 0x3d, 0xb0, 0xad, 0x48, 0xd6, 0x48, 0x09, 0x21, 0x0b, 0x41, 0x0c, 0x54, 0x62, 0x48,
	0x62, 0x03, 0x3b, 0xcc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x7b, 0x98, 0xd7, 0xb3, 0x00,
	0x00, 0x00,
}
